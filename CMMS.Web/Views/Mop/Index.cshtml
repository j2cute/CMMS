@model ClassLibrary.ViewModels.MopViewModels
    @using CMMS.Web.Helper
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<link href="~/Content/morris.css" rel="stylesheet" />
<link href="~/Content/Digtalstyle.css" rel="stylesheet" />
<script src="~/Content/Digitalscript.js"></script>
<script src="~/Scripts/moment.min.js"></script>
<link href="~/Scripts/themes/default/style.min.css" rel="stylesheet" />
<script src="~/Scripts/jstree.min.js"></script>
<link href="~/Content/sweetalert.css" rel="stylesheet" />
<script src="~/Scripts/sweetalert.min.js"></script>

<style>
    .modal-dialog {
        width: 80% !important;
    }

    .avatar-preview {
        width: 192px;
        height: 192px;
        position: relative;
        border: 6px solid #F8F8F8;
        box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.1);
    }

    a {
        cursor: pointer;
    }
    td {
        font-size: 12px !important;
    }

    table.dataTable tbody th, table.dataTable tbody td {
        padding: 4px 4px !important;
    }
</style>


@*<script>
        $('#gridMop').DataTable();
    </script>*@


<script>
    var permissions;
    $(document).ready(function () {
    permissions = @Html.Raw(Json.Encode(((SessionHelper)Session[SessionKeys.SessionHelperInstance]).CurrentRolePermissions));

        var mopTable;
        $("#addNewMOP").attr('disabled', true);
        $("#ConfigEquipment").hide();
        $("#Proceed").click(function () {

            resetFormInputs();
            $("#ConfigEquipment").show();
            $("#M_MOP_SiteId").val($('#C_Site_Config_SiteId').val());
        });

        function resetFormInputs(context) {
            var siteId = $('#C_Site_Config_SiteId').val();
            jQuery('#WizardPicturePreview').attr("src", "../Content/Img/default-avatar.png")
            //$("#File").prop('disabled', false)
            jQuery(':input', '#AllDetails')
                .removeAttr('checked')
                .removeAttr('selected')
                .attr("style", "pointer-events: '';")
                .not(':button, :submit, :reset, :hidden')
                .each(function () {
                    jQuery(this).val(jQuery(this).prop('defautValue'));
                });
            $('#C_Site_Config_SiteId').val(siteId);
        }
    });



    function GetSelectedData() {
          var siteId = $('#siteId').val();
          var pmsNo = $('#pmsNo').val();
          var mopNo = $('#mopNo').val();
        $.ajax({
                cache: 'false',
                type: "Post",
                // contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetSelectedData", "MOP")',

            dataType: 'json',  // add this line
            data: {
                siteId: siteId,
                pmsNo: pmsNo,
                mopNo: mopNo
            },
            success: function (data) {
                $("#M_MOPModel_SiteId").val(data.M_MOPModel.SiteId)
                $("#M_MOPModel_PMS_No").val(data.M_MOPModel.PMS_No);
                $("#M_MOPModel_MOP_No").val(data.M_MOPModel.MOP_No);
                $("#M_MOPModel_MOP_Desc").val(data.M_MOPModel.MOP_Desc);
                $("#M_MOPModel_By_Whom").val(data.M_MOPModel.By_Whom);
                $("#M_MOPModel_Periodicity").val(data.M_MOPModel.Periodicity);
                $("#M_MOPModel_Period").val(data.M_MOPModel.Period);
                $("#M_MOPModel_Doc").val(data.M_MOPModel.Doc);
                $("#M_MOPModel_Task_Procedure").val(data.M_MOPModel.Task_Procedure);
                $("#M_MOPModel_Safety_Precautions").val(data.M_MOPModel.Safety_Precautions);

            },
            failure: function (data) {
                alert("failed! Call us Please.");
            },
            error: function (data) {
                alert("failed! Error.");

            },
        });

    };
    function OnSuccess(response) {
        console.log(response);
        $("#addMOP").modal('hide'); $("#editMOP").modal('hide'); $("#delMOP").modal('hide');
        if (response.model != null) {

            $("#gridMop").DataTable().destroy();
            mopTable = $("#gridMop").DataTable(
                {
                    scrollX: true,
                    bLengthChange: true,
                    lengthMenu: [[5, 10, -1], [5, 10, 15, "All"]],
                    bFilter: true,
                    bSort: true,
                    bPaginate: true,
                    data: response.model,
                           @* <a class="btn-primary btn-sm" data-modal='' href="@Url.Action(" Edit", "Parts", new { id = item.Part_No, c_code =item.CageCode })" > <i class="fa fa-pencil"></i></a > |*@

            columns: [
                { 'data': 'SiteId' },
                { 'data': 'PMS_No' },
                { 'data': 'MOP_No' },
                { 'data': 'MOP_Desc' },
                { 'data': 'By_Whom' },
                { 'data': 'PeriodMonth' },
                { 'data': 'mmsDoc' },
                {
                    'data': function (data, type, row, meta) {

                        var actions = '';

                        if (permissions.filter(obj => obj.PermissionId == "MOPEdit").length > 0) {
                            actions = '<a data-toggle="modal" data-target="#editMOP" class="btn btn-primary btn-xs select">' + 'Edit' + '</a>';
                        }

                        else {
                            actions = '<a data-toggle="modal" data-target="#editMOP" class="btn btn-primary btn-xs select disabled">' + 'Edit' + '</a>';
                        }


                        actions = actions + " " + '|' + " ";

                        if (permissions.filter(obj => obj.PermissionId == "MOPDel").length > 0) {
                            actions = actions + '<a data-toggle="modal"  data-target="#delMOP" class="btn btn-danger btn-xs select">' + 'Delete' + '</a>';
                        }
                        else {
                            actions = actions + '<a data-toggle="modal"  data-target="#delMOP" class="btn btn-danger btn-xs select disabled">' + 'Delete' + '</a>';
                        }

                        return actions;
         
                    }

                },
                //'<a href="Delete/Cage/' + data.MOP_No + '">' + 'Delete' + '</a>';
            ]
            //   '<a data-modal="" class="btn-primary btn-sm"  href="Edit/' + data.MOP_No + '">' + 'Edit' + '</a>' + " " + '|' + " " + '<a  class="btn-danger btn-sm" data-modal="" href="Delete/' + data.MOP_No + '">' + 'Delete' + '</a>';

                });
            if (response.msg != "") {
                swal({
                    title: response.msg, type: "success", timer: 1500, showConfirmButton: false,
                });
            }
               
            if (permissions.filter(obj => obj.PermissionId == "MOPAdd").length > 0) 
            {
                $("#addNewMOP").attr('disabled', false);
            }
          
                $("#AddPMS_No").val(response.pmsNo);
                var pmsVal = "PMS No : " + response.pmsNo;
                var labelText = document.getElementById('pmsTitle');
                labelText.innerHTML = pmsVal;
        }
        else{

            $("#addNewMOP").attr('disabled', true);
            var labelText = document.getElementById('pmsTitle');
            labelText.innerHTML = "No PMS attached";
            $("#gridMop").DataTable().destroy();
            $('#gridMop').DataTable({ scrollX: true, }).clear().draw();
        }


    $('#gridMop tbody').on("click", '.select', function () {
        var tblData = mopTable.rows($(this).closest('tr')).data();
        var siteId = $(this).closest('tr').find("td:eq(0)").text();
        var pmsNo = $(this).closest('tr').find("td:eq(1)").text();
        var mopNo = $(this).closest('tr').find("td:eq(2)").text();
        $('#siteId').val(siteId);
        $('#pmsNo').val(pmsNo);
        $('#mopNo').val(mopNo);
        GetSelectedData();
    });
    };
    function AddMOPData() {
        $.ajax({
            cache: 'false',
            type: "Post",
            url: '@Url.Action("AddMOP", "MOP")',
            dataType: 'json',
            data: {
                SiteID: $('#C_Site_Config_SiteId').val(),
                eswbs: $('#eswbs').val(),

                SiteId: $("#M_MOP_SiteId").val(),
                PMS_No: $("#AddPMS_No").val(),
                MOP_No: $("#M_MOP_MOP_No").val(),
                MOP_Desc: $("#M_MOP_MOP_Desc").val(),
                By_Whom: $("#M_MOP_By_Whom").val(),
                Periodicity: $("#M_MOP_Periodicity").val(),
                Period:  $("#M_MOP_Period").val(),
                Doc: $("#M_MOP_Doc").val(),
                Task_Procedure: $("#M_MOP_Task_Procedure").val(),
                Safety_Precautions:  $("#M_MOP_Safety_Precautions").val(),

            },
            success: OnSuccess,
            failure: function (response) {
                var finalError = ''
                for (i = 0; i < vm.responseJSON.length; i++) {
                    finalError += vm.responseJSON[i].key + " : " + vm.responseJSON[i].errors[0] + "\n";
                }

                swal({ title: "ERROR", text: finalError, type: "error", });   },
            error: function (response) {
                var finalError = ''
                for (i = 0; i < response.responseJSON.length; i++) {
                    finalError += response.responseJSON[i].key + " : " + response.responseJSON[i].errors[0] + "\n";
                }

                swal({ title: "ERROR", text: finalError, type: "error", });
            }
        });
    };
    function EditMOPData() {
        $.ajax({
            cache: 'false',
            type: "Post",
            url: '@Url.Action("EditMOP", "MOP")',
            dataType: 'json',
            data: {
                SiteID: $('#C_Site_Config_SiteId').val(),
                eswbs: $('#eswbs').val(),

                SiteId : $("#M_MOPModel_SiteId").val(),
                PMS_No: $("#M_MOPModel_PMS_No").val(),
                MOP_No: $("#M_MOPModel_MOP_No").val(),
                MOP_Desc: $("#M_MOPModel_MOP_Desc").val(),
                By_Whom: $("#M_MOPModel_By_Whom").val(),
                Periodicity:  $("#M_MOPModel_Periodicity").val(),
                Period:  $("#M_MOPModel_Period").val(),
                Doc:  $("#M_MOPModel_Doc").val(),
                Task_Procedure: $("#M_MOPModel_Task_Procedure").val(),
                Safety_Precautions:  $("#M_MOPModel_Safety_Precautions").val(),

            },
            success: OnSuccess,
            failure: function (response) {
                swal({ title: "ERROR", text: "Their is something went wrong!!!", type: "error", });

            },
            error: function (response) {
                var finalError = ''
                for (i = 0; i < response.responseJSON.length; i++) {
                    finalError += response.responseJSON[i].key + " : " + response.responseJSON[i].errors[0] + "\n";
                }

                swal({ title: "ERROR", text: finalError, type: "error", });
            }
        });
    };
    function DeleteMOPData() {
        var siteId = $('#siteId').val();
        var pmsNo = $('#pmsNo').val();
        var mopNo = $('#mopNo').val();
        $.ajax({
            cache: 'false',
            type: "Post",
            url: '@Url.Action("DeleteMOP", "MOP")',
            dataType: 'json',
            data: {
                SiteID: $('#C_Site_Config_SiteId').val(),
                eswbs: $('#eswbs').val(),
                s_siteId: siteId,
                pmsNo: pmsNo,
                mopNo: mopNo
            },
            success: OnSuccess,
            failure: function (response) {
                swal({ title: "ERROR", text: "Their is something went wrong!!!", type: "error", });
             },
            error: function (response) {
                swal({ title: "ERROR", text: "Their is something went wrong!!!", type: "error", });
             },
        });
    };
    function OpenAllNode() {
        let selectedNode = $("#jstree").jstree("get_selected");
        if (selectedNode) {
            let node_info = $('#jstree').jstree("get_node", selectedNode[0]);
            $("#jstree").jstree("open_node", [selectedNode, node_info.children_d]);
        }
    }
    function GetSiteConfig() {
        var siteId = $('#C_Site_Config_SiteId').val();
        $.ajax({
            cache: 'false',
            type: "Post",
            //  contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetSiteConfig", "MOP")',

            dataType: 'json',  // add this line
            data: {
                siteId: siteId
            },
            success: function (vm) {
                var labelText = document.getElementById('pmsTitle');
                labelText.innerHTML = "PMS NO:";
                $("#jstree").jstree('destroy').empty();
                    $("#jstree").jstree({
                        "core": {
                            "themes": {
                                "variant": "large"
                            },
                            "data": JSON.parse(vm.JsonSiteConfig)
                        },

                        "plugins": ["wholerow"],
                    });
                $('#jstree').on('changed.jstree', function (e, data) {
                    var data = data.instance.get_node(data.selected[0]);
                    var eswbs = data.id;
                    $('#eswbs').val(eswbs);
                    var siteId = $('#C_Site_Config_SiteId').val();
                    $.ajax({
                        type: "Post",
                        url: "/Mop/GetMOPData",
                        data: {
                            SiteId: siteId,
                            eswbs: JSON.parse(eswbs)
                        },
                        //  contentType: "application/json; charset=utf-8",
                        dataType: 'json',

                        success: OnSuccess,
                        failure: function (response) {                     
                            $("#addNewMOP").attr('disabled', true);
                            var labelText = document.getElementById('pmsTitle');
                            labelText.innerHTML = "No PMS attached";
                            $("#gridMop").DataTable().destroy();
                            $('#gridMop').DataTable({ scrollX: true, }).clear().draw();


                        },
                        error: function (response) {
                     
                            $("#addNewMOP").attr('disabled', true);
                            var labelText = document.getElementById('pmsTitle');
                            labelText.innerHTML = "No PMS attached";
                            $("#gridMop").DataTable().destroy();
                            $('#gridMop').DataTable({ scrollX: true, }).clear().draw();

                        }
                    });
                });
            },
        });
    };
</script>

<section class="content-header">
    <h1>
        MOP
    </h1>

</section>


<section class="content" style="min-height:0px !important">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">

                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group row">
                                    <label class="col-sm-1 col-form-label">Select Unit</label>
                                    <div class="col-sm-4">
                                        @Html.DropDownListFor(model => model.C_Site_Config.SiteId, new SelectList(Model._tbl_Unit, "Id", "Name"), "Select", new { @class = "form-control", @required = "true" })
                                        @Html.ValidationMessageFor(model => model.C_Site_Config.SiteId, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-sm-7">
                                        <input type="button" id="Proceed" onclick="GetSiteConfig()" value="Proceed" class="btn btn-primary" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
        <!-- /.row (main row) -->
    </div>
</section>

<input type="hidden" name="eswbs" id="eswbs" />
<input type="hidden" name="siteId" id="siteId" />
<input type="hidden" name="pmsNo" id="pmsNo" />
<input type="hidden" name="mopNo" id="mopNo" />
<!-- Main content -->

<section class="content">
    <div class="container-fluid">

        <div class="row" id="ConfigEquipment">

            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h6 class="card-title"><b>Select ESWBS to View MMS5</b></h6>

                    </div>
                    <div class="card-body">
                        <div class="scroll" style="overflow-x: auto;  width: 100%;">

                            <div id="jstree" style="min-height:495px">
                            </div>
                        </div>
                        <br />
                        <div>
                            <input type="button" value="Expand" class="btn btn-success" id="btnExpand" onclick="OpenAllNode()" />

                        </div>
                    </div>
                </div>

            </div>

            <div class="col-md-6" id="AllDetails">

                <div class="row" id="Mms5Details">
                    <div class="card card-default" style="width:100%">
                        <div class="card-header">
                            <h3 class="card-title"><label id="pmsTitle"></label></h3>

                            @*<input class="form-control" id="pmsCheck" type="text" readonly="readonly" />*@



                        <div class="card-tools">
                            @*<a data-toggle="modal" data-target="#addMOP" id="addNewMOP" class="btn btn-success btn-sm"><i class="fa fa-plus"></i> Add New MOP</a>*@
                            <input data-toggle="modal" data-target="#addMOP" id="addNewMOP" type="button" value="Add New MOP" class="btn btn-success btn-sm"/>

                            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                <i class="fas fa-minus"></i>
                            </button>

                        </div>
                        </div>
                    
                        <div class="card-body">
                            <table id="gridMop" class="table table-bordered table-striped" style="width:100%">
                                <thead>
                                    <tr>

                                        <th>Site Id</th>
                                        <th>PMS No</th>
                                        <th>MOP NO</th>
                                        <th>DESCRIPTION</th>
                                        <th>BY WHOM</th>
                                        <th>Period</th>
                                        <th>DOC</th>
                                        <th>Actions</th>


                                    </tr>
                                </thead>
                            </table>

                        </div>
                    </div>
                </div>
            </div>



        </div>
    </div>

</section>

<div id='addMOP' class='modal fade'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='myModalContent'>

                <div class="modal-header">
                    <h4 class="modal-title">Add MOP</h4>

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>


                <div class="modal-body">
                    @*@Html.HiddenFor(model => model.C_Site_Config.Part_No)
                        @Html.HiddenFor(model => model.C_Site_Config.CageCode)*@
                    <div class="card card-default">
                      

                        <!-- /.card-header -->
                        <!-- form start -->
                        <div class="card-body" id="InputFields">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Site</label>

                                        @Html.EditorFor(model => model.M_MOP.SiteId, new { htmlAttributes = new { @class = "form-control", @readonly = true, @required = "true" } })
                                        @Html.ValidationMessageFor(model => model.M_MOP.SiteId, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>PMS No.</label>
                                        @Html.EditorFor(model => model.M_MOP.PMS_No, new { htmlAttributes = new { @class = "form-control", @id = "AddPMS_No", @readonly = "true" } })

                                        @Html.ValidationMessageFor(model => model.M_MOP.PMS_No, "", new { @class = "text-danger" })


                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>MOP No.<span style="color:red">*</span></label>

                                        @Html.EditorFor(model => model.M_MOP.MOP_No, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.M_MOP.MOP_No, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>MOP Description<span style="color:red">*</span></label>

                                        @Html.EditorFor(model => model.M_MOP.MOP_Desc, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.M_MOP.MOP_Desc, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>By Whom<span style="color:red">*</span></label>

                                        @Html.EditorFor(model => model.M_MOP.By_Whom, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.M_MOP.By_Whom, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Periodicity</label>

                                        @Html.EditorFor(model => model.M_MOP.Periodicity, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.M_MOP.Periodicity, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Period<span style="color:red">*</span></label>

                                        @Html.DropDownListFor(model => model.M_MOP.Period, new List<SelectListItem>
                                         {    new SelectListItem() {Text = "H", Value="H"},
                                              new SelectListItem() {Text = "W", Value="W"},
                                              new SelectListItem() {Text = "M", Value="M"},
                                              new SelectListItem() {Text = "Y", Value="Y"}
                                         }, "...Select...", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.M_MOP.Period, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Doc</label>

                                        @Html.EditorFor(model => model.M_MOP.Doc, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.M_MOP.Doc, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Task Procedure<span style="color:red">*</span></label>

                                        @Html.EditorFor(model => model.M_MOP.Task_Procedure, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.M_MOP.Task_Procedure, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Safety Precautions</label>

                                        @Html.EditorFor(model => model.M_MOP.Safety_Precautions, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.M_MOP.Safety_Precautions, "", new { @class = "text-danger" })

                                    </div>
                                </div>

                            </div>

                        </div>

                    </div>

                    <div class="card-footer" id="footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <input type="button" onclick="AddMOPData()" value="Submit" class="btn btn-primary float-right" />
                    </div>


                </div>


            </div>
        </div>
    </div>
</div>

<div id="editMOP" class='modal fade'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='myModalContent'>

                <div class="modal-header">
                    <h4 class="modal-title">Edit MOP</h4>

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>


                <div class="modal-body">
                    @*@Html.HiddenFor(model => model.C_Site_Config.Part_No)
                        @Html.HiddenFor(model => model.C_Site_Config.CageCode)*@
                    <div class="card card-default">
                     

                        <!-- /.card-header -->
                        <!-- form start -->
                        <div class="card-body" id="InputFields">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Site</label>

                                        @Html.EditorFor(model => model.M_MOPModel.SiteId, new { htmlAttributes = new { @class = "form-control", @readonly = true, @required = "true" } })
                                        @Html.ValidationMessageFor(model => model.M_MOPModel.SiteId, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>PMS No.</label>

                                        @Html.EditorFor(model => model.M_MOPModel.PMS_No, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.M_MOPModel.PMS_No, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>MOP No.<span style="color:red">*</span></label>

                                        @Html.EditorFor(model => model.M_MOPModel.MOP_No, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                        @Html.ValidationMessageFor(model => model.M_MOPModel.MOP_No, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>MOP Description<span style="color:red">*</span></label>

                                        @Html.EditorFor(model => model.M_MOPModel.MOP_Desc, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.M_MOPModel.MOP_Desc, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>By Whom<span style="color:red">*</span></label>

                                        @Html.EditorFor(model => model.M_MOPModel.By_Whom, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.M_MOPModel.By_Whom, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Periodicity</label>
                                        @Html.EditorFor(model => model.M_MOPModel.Periodicity, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.M_MOPModel.Periodicity, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Period<span style="color:red">*</span></label>

                                        @Html.DropDownListFor(model => model.M_MOPModel.Period, new List<SelectListItem>
                                       {    new SelectListItem() {Text = "H", Value="H"},
                                            new SelectListItem() {Text = "W", Value="W"},
                                            new SelectListItem() {Text = "M", Value="M"},
                                            new SelectListItem() {Text = "Y", Value="Y"}
                                       }, "...Select...", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.M_MOPModel.Period, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Doc</label>

                                        @Html.EditorFor(model => model.M_MOPModel.Doc, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.M_MOPModel.Doc, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Task Procedure<span style="color:red">*</span></label>

                                        @Html.EditorFor(model => model.M_MOPModel.Task_Procedure, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.M_MOPModel.Task_Procedure, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label>Safety Precautions</label>

                                        @Html.EditorFor(model => model.M_MOPModel.Safety_Precautions, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.M_MOPModel.Safety_Precautions, "", new { @class = "text-danger" })

                                    </div>
                                </div>

                            </div>

                        </div>

                    </div>

                    <div class="card-footer" id="footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <input type="button" onclick="EditMOPData()" value="Submit" class="btn btn-primary float-right" />
                    </div>


                </div>


            </div>
        </div>
    </div>
</div>

<div id='delMOP' class='modal fade'>
    <div class="modal-dialog modal-lg" style="width: 40% !important;">
        <div class="modal-content">
            <div id='myModalContent'>

                <div class="modal-header">
                    <h4 class="modal-title" style="color:red"><b>Confirm Delete</b></h4>

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>


                <div class="modal-body">
                    <h3>Are you sure you want to delete this?</h3>
                </div>
                <div class="modal-footer">
                    <div class="form-actions no-color">
                        <button class="btn btn-default" data-dismiss="modal">Close</button>
                        <input type="submit" onclick="DeleteMOPData()" value="Delete" class="btn btn-danger" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/Scripts/Common/ModalPopup.js")
}




