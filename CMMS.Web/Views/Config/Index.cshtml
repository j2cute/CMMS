@model ClassLibrary.ViewModels.ConfigViewModel
@using CMMS.Web.Helper
<link href="~/Content/morris.css" rel="stylesheet" />
<link href="~/Content/Digtalstyle.css" rel="stylesheet" />
<script src="~/Content/Digitalscript.js"></script>
<script src="~/Scripts/moment.min.js"></script>
<link href="~/Scripts/themes/default/style.min.css" rel="stylesheet" />

<script src="~/Scripts/jstree.min.js"></script>
<style>
    .slimScrollBar {
        background: rgb(204, 204, 204) !IMPORTANT;
    }
</style>
<script>
    var siteId;
    $(document).ready(function () {

        permissions = @Html.Raw(Json.Encode(((SessionHelper)Session[SessionKeys.SessionHelperInstance]).CurrentRolePermissions));

        if (!permissions.filter(obj => obj.PermissionId == "AddSystem").length > 0) {
            $("#items").addClass('disabled')
        }  


     siteId = @Html.Raw(Json.Encode(((SessionHelper)Session[SessionKeys.SessionHelperInstance]).SelectedSiteId));
        $("#C_Site_Config_SiteId").val(siteId).attr('disabled', true, "style", "pointer-events: '';")

       // $("#ConfigBox").hide();
      //  $("#Proceed").click(function () {
       // $("#ConfigBox").show();
        GetConfig();
       // });
 });

</script>

<section class="content-header">
    <h1>
        Configure Systems
    </h1>

</section>
<!-- Main content -->
<section class="content" style="min-height:0px !important">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">

                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group row" style="margin-bottom: 0.1rem">
                                    <label class="col-sm-2 col-form-label">Selected Unit</label>
                                    <div class="col-sm-4">
                                        @Html.DropDownListFor(model => model.C_Site_Config.SiteId, new SelectList(Model._tbl_Unit, "Id", "Name"), "Select", new { @class = "form-control", @required = "true" })
                                        @Html.ValidationMessageFor(model => model.C_Site_Config.SiteId, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-sm-7">
                                     @*   <input type="button" id="Proceed" onclick="GetConfig()" value="Proceed" class="btn btn-primary" />*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
        <!-- /.row (main row) -->
    </div>
</section>

<section class="content">
    <div class="container-fluid">


        <div class="row" id="ConfigBox">

            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <div class="scroll" style="overflow-x: auto;  width: 100%;">

                            <h4>Master Configuration</h4>

                            <div id="jstree" style="min-height:495px">
                            </div>
                        </div>
                        <br />
                        <div>
                            <input type="button" value="Expand" class="btn btn-success" id="btnExpand" onclick="OpenAllNode()" />
                            <input type="submit" id="items" value="Add Systems >>" class="btn btn-success" onclick="GetSiteConfig()" />
                            <input type="hidden" name="selectedItems" id="selectedItems" />

                        </div>
                    </div>
                </div>

            </div>

            <div class="col-md-6">

                <div class="card">
                    <div class="card-body">

                        <div class="scroll" style="overflow-x: auto;  width: 100%;">

                            <h4>Site Configuration</h4>

                            <div id="jstreeSiteConfig" style="min-height:550px">

                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>

    </div>
</section>




<script>
    $(function () {
        $('#example1').DataTable({
            "scrollX": true,
        })
    });
</script>

<script>
    function GetConfig() {
        var unitId = $('#C_Site_Config_SiteId').val();
        $.ajax({
            cache: 'false',
            type: "Post",
            //  contentType: "application/json; charset=utf-8",
            url: '@Url.Action("GetConfig", "Config")',

            dataType: 'json',  // add this line
            data: {
                unitId: unitId
            },
            success: function (vm) {
                $("#jstree").jstree('destroy').empty();
                $("#jstreeSiteConfig").jstree('destroy').empty();
                //$(function () {
                //    $('#jstree').on('changed.jstree', function (e, data) {
                //        debugger;
                //        var test = data;
                //        console.log(test);
                //        var i, j;
                //        var selectedItems = [];

                //        for (i = data.instance.get_node(data.selected[0]).parents.length - 2; i >= 0; i--) {
                //            debugger;

                //            var parentNodeId = data.instance.get_node(data.selected[0]).parents[i];
                //            console.log(parentNodeId);
                //            //Add the Node to the JSON Array.
                //            selectedItems.push({
                //                text: data.instance.get_node(parentNodeId).text,
                //                id: parentNodeId,
                //                parent: data.instance.get_node(parentNodeId).parent
                //            });
                //        }

                //        //console.log(selectedItems);
                //        selectedItems.push({
                //            text: data.instance.get_node(data.selected[0]).text,
                //            id: data.instance.get_node(data.selected[0]).id,
                //            parent: data.instance.get_node(data.selected[0]).parent
                //        });

                //        //console.log(selectedItems);
                //        for (i = 0; i < data.instance.get_node(data.selected[0]).children_d.length; i++) {
                //            var childNodeId = data.instance.get_node(data.selected[0]).children_d[i];
                //            //Add the Node to the JSON Array.
                //            selectedItems.push({
                //                text: data.instance.get_node(childNodeId).text,
                //                //  text: data.instance.get_node(childNodeId).text,
                //                id: childNodeId,
                //                parent: data.instance.get_node(childNodeId).parent
                //            });
                //        }
                //        //console.log("children////////", selectedItems);
                //        //Serialize the JSON Array and save in HiddenField.
                //        $('#selectedItems').val(JSON.stringify(selectedItems));
                //        console.log("finally..........", $('#selectedItems').val());


                //        console.log($("#jstree").jstree("get_selected").text);
                //        console.log ($("#jstree").jstree().get_selected(true)[0].text);
                //    })
                //});
                $("#jstree").jstree({
                    "core": {
                        "themes": {
                            "variant": "large"
                        },
                        "data": JSON.parse(vm.JsonMasterConfig)
                    },
                    "checkbox": {
                        "keep_selected_style": false
                    },
                    "plugins": ["wholerow", "checkbox"],
                });
                $("#jstreeSiteConfig").jstree({

                    "core": {
                        "themes": {
                            "variant": "large"
                        },
                        "data": JSON.parse(vm.JsonSiteConfig)
                    },
                    "checkbox": {
                        "keep_selected_style": false
                    },
                    "plugins": ["wholerow", "checkbox"],
                });
            },
        });
    }


</script>
<script>
       function GetSiteConfig() {
            var abc = $('#selectedItems').val();
           var unitId = $('#C_Site_Config_SiteId').val();

           var selectedData = [];
           var selectedIndexes;
           selectedIndexes = $("#jstree").jstree("get_selected", true);
           jQuery.each(selectedIndexes, function (index, value) {
               selectedData.push(selectedIndexes[index]);
           });

   
           selectedData = JSON.stringify(selectedData);
           console.log(selectedData);

            $.ajax({
                // cache: 'false',
                type: "Post",
                //  contentType: "application/json; charset=utf-8",
                url: '@Url.Action("AddSystem", "Config")',

                dataType: 'json',  // add this line
                data: {
                    selectedItems: selectedData,
                    unitId: unitId
                },
                success: function (vm) {
                   
                    $("#jstreeSiteConfig").jstree('destroy').empty();
                    $("#jstreeSiteConfig").jstree({

                "core": {
                    "themes": {
                        "variant": "large"
                    },
                    "data": JSON.parse(vm.JsonSiteConfig)
                    },
                "checkbox": {
                    "keep_selected_style": false
                },
                "plugins": ["wholerow", "checkbox"],
                    });

                    swal({ title: "SUCCESS", text: "Data Saved Successfully", type: "success", });

                },

                failure: function (vm) {
                    swal({ title: "Error", text: "Something went wrong.", type: "error", });
                },
                error: function (vm) {
                    swal({ title: "Error", text: "Something went wrong.", type: "error", });
                }
            });
    };

    function OpenAllNode() {
        let selectedNode = $("#jstree").jstree("get_selected");
        if (selectedNode) {
            let node_info = $('#jstree').jstree("get_node", selectedNode[0]);
            $("#jstree").jstree("open_node", [selectedNode, node_info.children_d]);
        }
    }
</script>


<div id='myModal' class='modal fade'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/Scripts/Common/ModalPopup.js")
}
